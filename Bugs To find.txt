1- Recon specific:
● Recon
● JS + HTML full code review
● JS Files analysis (Static / dynamic, functionalities, extracting secrets , parameters)
● Map entry points (Access all functionalities/ Increase Access)
● DO initial tests (things to look at first)
● Scanners (Scanning)
● Third party scanning (S3 Buckets, Github)
● Version detection and vulns (website (tech stack, language, versions) + webserver + network)
● Vulnerabilities in all tech stack
● CMS exploitation (Vulns, default creds, misconfigurations , others)

1- Bugs:
●  Fuzzing every user input field too (Fuzzing server wide issues and other input specifics too)
●  Fuzzing and seeing response length and timing and other changes (For all bugs)
● See every small detail , like errors, change in status code , headers, content length or others
● Others easy bugs + Default Creds + Subdomain Takeovers + .git files + S3 buckets + Login brute force (+ with custom wordlists)
● Sensitive data exposure/ Misconfigurations
● Broken authentication  + Default / weak credentials + Rate limit
● Race condition on all sensitive functions
● Access Control/IDORs (Multi Step Processes , Privilege Escalation - Horizontal / Vertical, Broken Object level -IDOR , Parameter Level , Function Level , Logic Bugs)(Must see seperately for all cases)
● Logic Bugs (Changing Business Logic)
● Rate Limiting bugs (Leading to disruption of logic) + Timing attacks
● Sql Injection / No Sql Injection / Ldap Injection (Try for Second Order Injection Too , In pages where data is retrieved, shown , used , deleted)
● Cmd Injection
● SSTI / CSTI (Must - Both)
● Second Order Injection (all injections / vulns) ,In pages where data is retrieved, reflected , used
● XSS (Blind + DOM (with DOM invader) + Reflective + Stored + CSTI) (Separately)
● Dom Based Injections (Redirects , Post messages) +  Content injection + Dangling markup injection
● Csrf (State Changing Requests, can be GET (vulnerable to csrf) / Post/ Others)
● Clickjacking + (Session Fixation for double submit) + Session Fixation
● File Upload 
● LFI / RFI / Directory (Path) Traversal
● Directory traversal if app using internal routes
● SSRF (Open redirect too) (try for ssrf -> lfi too)
● Open Redirects on Redirects
● XXE / Xml Based Attacks (Other xml injection)
● Origin Ip Finding
● 403,401, 302 Bypasses
● APi Versions + Sensitive Parameters + BOLA + IDORS
● Other Api Bugs
● JWT + Session Attacks (+ none/Known/default/no verification and weak Secrets + JKU attacks, algo confusion) (Try Both and Fuzz all cookies too)
● CRLF Injection (CRLF to request Smuggling)
● CORS
● Parameter Pollution (Trying with Post/Get/Json/Xml and Double parameters for stuff like $_REQUEST superglobal, Must try with different backends)
● Mass Assignment (Must try with differnet parameters and different vals for same parameters, passing different data type (array etc) in parameters)
● S3 / Lambda / Other Aws / Cloud misconfigs
● Others like BLH
● Cache Poisoning + Cache Deception
● Request Smuggling
● Insecure Deserialization
● Unicode Normalization , Unicode Compatibility check /Homoglyph attacks/ Unicode Ligatures, UTF-8/16 to ASCII (lower Conversion Errors and Inconsistencies)
● Data Parsing Discrepancies (Amond differnet functions, different filters ,different applications and amon WAFs, reverse proxies, CDNs and the server)
● Data parsing / Config / Other discrepancies between various systems / products / solutions / designs / applications in place and interacting
● Web socket vulnerabilities (Try other vulns in sockets data too)
● Attacks on Randomness of Data / Attributes/ Values / Events
● Bypassing Regex , WAF and Filters
● RegDos
● Prototype Pollution (Client side + Server Side , when accessing/changing prototype / object hierarchy) (Must see in whitebox too)

● Whitebox Bugs:
    ● Code Injection 
    ● Loose Comparison / Type Confusion / Type Juggling (can send data as strings , arrays in web) 
    ● Insecure Desearialization (code execution, login bypass, Object injection)
● Manual and Automated Code review + Sast Analysis
● Crypto bugs if custom crypto
● Pwn bugs if using low level languages
